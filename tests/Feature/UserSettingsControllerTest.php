<?php

namespace Tests\Feature;

use App\Models\User;
use App\Models\UserDetails;
use App\Models\UserSettings;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

class UserSettingsControllerTest extends TestCase
{
    protected $token;
    protected $testId;



    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $user = factory(User::class)->create([
                'email' => 'token@test.com',
                'password' => bcrypt('123456')]
        );
        $this->testId = $user->id;
        $user->image()->create(['url' => $this->faker->url,'name'=>'test']);
        $userDetails = factory(UserDetails::class)->create([
            'type'=>2,
            'user_id' => $user->id,
        ]);
        $response = $this->post('api/login', [
            'email' => 'token@test.com',
            'password' => '123456',
        ]);

        $this->token = $response->json('access_token');

    }


    public function test_list_by_user_200()
    {
        factory(UserSettings::class,10)->create([
            'user_id'=>$this->testId
        ]);
        $response = $this->json('GET', 'api/a/users/settings?token=' . $this->token);
        $response->assertStatus(200);
        $response->assertJsonStructure(['data' => [[
            'id',
            'setting',
            'value'
        ]]]);
    }

    public function test_update_by_id_200()
    {
       $setting =  factory(UserSettings::class)->create([
            'user_id'=>$this->testId,
            'value'=>true
        ]);
        $response = $this->json('PUT', 'api/a/users/settings/'.$setting->id.'?token=' . $this->token,[
            'value'=>false
        ]);
        $response->assertStatus(200);
        $response->assertJson(['data' => 'Setting updated']);
    }
}
