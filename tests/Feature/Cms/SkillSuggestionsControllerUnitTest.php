<?php
namespace Tests\Unit\Cms;

use App\Models\SkillSuggestion;
use Tests\TestCase;

use App\Models\User;
use App\Models\UserDetails;

class SkillSuggestionsControllerUnitTest extends TestCase
{

    protected $token;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $user = factory(User::class)->create([
                'email' => 'cms@test.com',
                'password' => bcrypt('123456')]
        );
        $this->testId = $user->id;
        $user->image()->create(['url' => $this->faker->url,'name'=>'test']);
        $userDetails = factory(UserDetails::class)->create([
            'type'=>3,
            'user_id' => $user->id,
        ]);
        $response = $this->post('api/login', [
            'email' => 'cms@test.com',
            'password' => '123456',
        ]);

        $this->token = $response->json('access_token'); 
    }

    public function testCreateSkillSuggestion201()
    {
        $data = [
            'name' => "Some text here"
        ];
 
        $response = $this->json('POST',
            'api/cms/skill-suggestions/create?token=' . $this->token,
            $data);
        
        $response->assertStatus(201);
    }

    public function testCreateSkillSuggestion422()
    {
        $response = $this->json('POST',
            'api/cms/skill-suggestions/create?token=' . $this->token,
            []);
        $response->assertStatus(422);

    }

    public function testShowSkillSuggestion200()
    {
        $skillSuggestion = factory(SkillSuggestion::class)->create();

        $response = $this->json('GET',
        'api/cms/skill-suggestions/show/' . $skillSuggestion->id . '?token=' . $this->token);
        $response->assertStatus(200);
    }
   
    public function testShowAll200()
    {
        $skillSuggestion = factory(SkillSuggestion::class)->create();

        $response = $this->json('GET',
            'api/cms/skill-suggestions?token=' . $this->token);
        $response->assertStatus(200);
    }


    public function testUpdateSkillSuggestion()
    {
        $data = [
            'name' => 'Some name here'
        ];
        $skillSuggestion = factory(SkillSuggestion::class)->create();

        $response = $this->json('PUT',
            'api/cms/skill-suggestions/update/' .$skillSuggestion->id.'?token=' . $this->token,
            $data);
        $response->assertStatus(204);

    }


    public function testDeleteSkillSuggestion()
    {
    
        $skillSuggestion = factory(SkillSuggestion::class)->create();

        $response = $this->json('DELETE',
            'api/cms/skill-suggestions/delete/' .$skillSuggestion->id.'?token=' . $this->token);
        $response->assertStatus(204);

    }

}

