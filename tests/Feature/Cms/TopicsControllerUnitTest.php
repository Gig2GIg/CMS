<?php
namespace Tests\Unit\Cms;

use App\Models\TypeProduct;
use Tests\TestCase;

use App\Models\Admin;
use App\Models\Topics;
use App\Models\UserDetails;

class TopicsControllerUnitTest extends TestCase
{

    protected $token;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $user = factory(Admin::class)->create([
                'email' => 'cms@test.com',
                'password' => bcrypt('123456')]
        );
        $this->testId = $user->id;

        $response = $this->post('api/admin/login', [
            'email' => 'cms@test.com',
            'password' => '123456',
        ]);
   
        $this->token = $response->json('token'); 
    }

    public function testCreateTopics201()
    {
        $data = [
            'title' => "Some text here"
        ];

        $response = $this->json('POST',
            'api/cms/topics/create?token=' . $this->token,
            $data);
        
        $response->assertStatus(201);
    }

    public function testCreateTopics422()
    {
        $response = $this->json('POST',
            'api/cms/topics/create?token=' . $this->token,
            []);
        $response->assertStatus(422);

    }

    public function testShowTopics200()
    {
        $topic = factory(Topics::class)->create();

        $response = $this->json('GET',
        'api/cms/topics/show/' . $topic->id . '?token=' . $this->token);
        $response->assertStatus(200);
    }
   
    public function testShowAll200()
    {
        $topic = factory(Topics::class, 5)->create();

        $response = $this->json('GET',
            'api/cms/topics?token=' . $this->token);
        $response->assertStatus(200);
    }


    public function testUpdateTopics()
    {
        $data = [
            'title' => 'Some name here'
        ];
        $topic = factory(Topics::class)->create();

        $response = $this->json('PUT',
            'api/cms/topics/update/' .$topic->id.'?token=' . $this->token,
            $data);
        $response->assertStatus(204);

    }


    public function testDeleteTopic()
    {
    
        $topic = factory(Topics::class)->create();

        $response = $this->json('DELETE',
            'api/cms/topics/delete/' .$topic->id.'?token=' . $this->token);
        $response->assertStatus(204);

    }

}

