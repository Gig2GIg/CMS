<?php

namespace Tests\Unit;

use App\Models\Skills;
use App\Models\User;
use App\Models\UserDetails;

use Tests\TestCase;


class SkillControllerTest extends TestCase
{
    protected $token;
    protected $testId;


    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $user = factory(User::class)->create([
                'email' => 'token@test.com',
                'password' => bcrypt('123456')]
        );
        $this->testId = $user->id;
        $user->image()->create(['url' => $this->faker->url]);
        $userDetails = factory(UserDetails::class)->create([
            'type' => 2,
            'user_id' => $user->id,
        ]);
        $response = $this->post('api/login', [
            'email' => 'token@test.com',
            'password' => '123456',
        ]);

        $this->token = $response->json('access_token');

    }
    public function test_all_skill_200(){
        factory(Skills::class,20)->create();
        $response = $this->json('GET','api/skills/show?token='.$this->token);

        $response->assertStatus(200);
        $dataj = json_decode($response->content(),true);
        $count = count($dataj['data']);
        $this->assertTrue($count > 5);
        $response->assertJsonStructure(['data' => [[
            "id",
            "name",
        ]]]);
    }

    public function test_all_skill_by_user_200(){
        factory(Skills::class,20)->create();
        $response = $this->json('GET','api/skills/byuser?token='.$this->token);

        $response->assertStatus(200);
        $dataj = json_decode($response->content(),true);
        $count = count($dataj['data']);
        $this->assertTrue($count > 5);
        $response->assertJsonStructure(['data' => [[
            "id",
            "name",
        ]]]);
    }
}
